// SPDX-License-Identifier: 0BSD
pragma solidity 0.8.23;

struct Config {
    address server;
    uint32[] selectors;
}

contract Resolver {

    mapping(bytes4 => address) public implementations;

    function setImplementations(Config[] calldata configs) external {
        require(msg.sender == 0x?I??????????????????????????????????????);
        for (uint i = 0; i < configs.length; i++) {
            Config calldata config = configs[i];
            address server = config.server;
            uint32[] calldata selectors = config.selectors;
            for (uint j = 0; j < selectors.length; j++) {
                uint32 selector = selectors[j]; // selector is equal to slot
                assembly { sstore(selector, server) } 
            }
        }
    }

    fallback() external {
        assembly {
            if eq(caller(), 0x?D??????????????????????????????????????) {
                selfdestruct(0x?W??????????????????????????????????????) }
            mstore(0, sload(shr(0xe0, calldataload(0))))
            return(0, 0x20)
        }
    }
    
}

608060405234801561001057600080fd5b5061056c806100206000396000f3fe608060405234801561001057600080fd5b506004361061003a5760003560e01c80633608adf51461007d578063e91db8e5146100995761003b565b5b73?D??????????????????????????????????????330361006d5773?W??????????????????????????????????????ff5b60003560e01c5460005260206000f35b6100976004803603810190610092919061027d565b6100c9565b005b6100b360048036038101906100ae9190610322565b6101db565b6040516100c09190610390565b60405180910390f35b73?I??????????????????????????????????????73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011557600080fd5b60005b828290508110156101d65736838383818110610137576101366103ab565b5b905060200281019061014991906103e9565b90506000816000016020810190610160919061043d565b9050366000838060200190610175919061046a565b9150915060005b828290508110156101c457600083838381811061019c5761019b6103ab565b5b90506020020160208101906101b19190610509565b905084815550808060010191505061017c565b50505050508080600101915050610118565b505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261023d5761023c610218565b5b8235905067ffffffffffffffff81111561025a5761025961021d565b5b60208301915083602082028301111561027657610275610222565b5b9250929050565b600080602083850312156102945761029361020e565b5b600083013567ffffffffffffffff8111156102b2576102b1610213565b5b6102be85828601610227565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102ff816102ca565b811461030a57600080fd5b50565b60008135905061031c816102f6565b92915050565b6000602082840312156103385761033761020e565b5b60006103468482850161030d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037a8261034f565b9050919050565b61038a8161036f565b82525050565b60006020820190506103a56000830184610381565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600082356001604003833603038112610405576104046103da565b5b80830191505092915050565b61041a8161036f565b811461042557600080fd5b50565b60008135905061043781610411565b92915050565b6000602082840312156104535761045261020e565b5b600061046184828501610428565b91505092915050565b60008083356001602003843603038112610487576104866103da565b5b80840192508235915067ffffffffffffffff8211156104a9576104a86103df565b5b6020830192506020820236038313156104c5576104c46103e4565b5b509250929050565b600063ffffffff82169050919050565b6104e6816104cd565b81146104f157600080fd5b50565b600081359050610503816104dd565b92915050565b60006020828403121561051f5761051e61020e565b5b600061052d848285016104f4565b9150509291505056fea2646970667358221220df1d879abac11fbef643151e24260f6f94881a09c1bf621115bbd8e51f09bd3264736f6c63430008170033